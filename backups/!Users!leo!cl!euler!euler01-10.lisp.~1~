;;;; Project Euler Problems
;;;; Solutions in Common Lisp 1-10
;;;; Leo Laporte 13 Nov 2021

(ql:quickload '(#:fiveam #:cl-ppcre #:str))

(defpackage :euler
  (:use #:cl)
  (:local-nicknames
   (:re :cl-ppcre)
   (:5a :fiveam)))

(in-package :euler)

(setf fiveam:*run-test-when-defined* t) ; test as we go
(declaim (optimize (debug 3)))          ; max debugging info

;;; Problem 1: Multiples of 3 or 5

;;; If we list all the natural numbers below 10 that are multiples of 3 or 5,
;;; we get 3, 5, 6 and 9. The sum of these multiples is 23.
;;; Find the sum of all the multiples of 3 or 5 below 1000.
(defun sum-numbers-divisible-by-3-and-5 (start stop)
  "sum the numbers that are multiples of 3 or 5 within the range of naturals from
start to stop exclusive"
  (let ((total 0))
    (loop for n from start below stop
	  do (when (or (zerop (mod n 3))
		       (zerop (mod n 5)))
	       (incf total n)))
    total))

(5a:test sum-numbers-divisible-by-3-and-5
  (5a:is (=  (sum-numbers-divisible-by-3-and-5 1 1000)  233168)))

;; Problem 2: Even Fibonacci numbers

;; Each new term in the Fibonacci sequence is generated by adding the previous
;; two terms. By starting with 1 and 2, the first 10 terms will be:

;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;; By considering the terms in the Fibonacci sequence whose values do
;; not exceed four million, find the sum of the even-valued terms.

(defun sum-even-fib (max)
  "sums the even numbers in a fibonacci serioes whose values don't exceed max"
  (labels ((fib-series (x y)
             "creates a list of the fibonacci series up to the max value"
             (cond ((> (+ x y) max) nil)
                   (t (cons (+ x y) (fib-series y (+ x y)))))))
    (apply #'+ (remove-if-not #'evenp (fib-series 0 1)))))

(sum-even-fib 4000000) ; -> 4613732

;; Problem 3: Largest prime factor

;; The prime factors of 13195 are 5, 7, 13 and 29.
;; What is the largest prime factor of the number 600851475143 ?

(defun max-prime-factor (n)
  (apply #'max (remove-if-not #'prime-p (factors n))))

(defun factors (num)
  "create a list of all the factors of num"
  (let ((divisor 2)
        (factor-list nil))
    (loop
      (when (>= divisor (/ num 2)) (return (reverse factor-list)))
      (when (zerop (mod num divisor)) (push divisor factor-list))
      (incf divisor))))

(defun prime-p (n)
  "returns true if n is a prime number"
  (let ((divisors (build-list 2 (floor (sqrt n)) 1)))
    (not (remove-if-not #'(lambda (div) (zerop (mod n div))) divisors))))

(defun build-list (start stop inc)
  "creates a new list from start to stop inclusive step 1"
  (let ((lst nil))
    (loop
      (when (> start stop) (return (reverse lst)))
      (push start lst)
      (setf start (+ start inc)))))

;;; Problem 4: Largest palindrome product

;;; A palindromic number reads the same both ways. The largest
;;; palindrome made from the product of two 2-digit numbers is
;;; 9009 = 91 Ã— 99. Find the largest palindrome made from the
;;; product of two 3-digit numbers.
(defun palindrome? (n)
  "returns true if n is a palindromic number"
  (let ((num-as-string (write-to-string n)))
    (equal num-as-string (reverse num-as-string))))

(5a:test palindrome?-test
  (5a:is-true (palindrome? 9009))
  (5a:is-false (palindrome? 1009))
  (5a:is-true (palindrome? 9999))
  (5a:is-true (palindrome? 99099)))

(defun find-largest-palindrome ()
  "find the largest palimdromic number that is the product of two numbers of n digits"
  (loop for i from 10 to 99
	do (loop for j from 10 to 99
		 collect (* i j))))

;;; Problem 5: Smallest multiple

;;; 2520 is the smallest number that can be divided by each of
;;; the numbers from 1 to 10 without any remainder. What is the
;;; smallest positive number that is evenly divisible by all of
;;; the numbers from 1 to 20?


;;; Problem 6: Sum square difference

;;; The sum of the squares of the first ten natural numbers is,
;;;               1^2 + 2^2 + ... + 10^2 = 385
;;; The square of the sum of the first ten natural numbers is
;;;           (1 + 2 + ... + 10)^2 = 55^2 = 3025
;;; Hence the difference between the sum of the squares of the
;;; first ten natural numbers and the square of the sum is
;;;                      3025 - 385 = 2640
;;; Find the difference between the sum of the squares of the
;;; first one hundred natural numbers and the square of the sum.


;;; Problem 7: 10001st prime

;;; By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13,
;;; we can see that the 6th prime is 13. What is the 10 001st prime number?
